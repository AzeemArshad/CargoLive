{"version":3,"sources":["./src/app/shared/dtos/auth/signin-dto.ts","./src/app/shared/services/signin.service.ts"],"names":[],"mappings":"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","file":"common-es5.js","sourcesContent":["import { ISigninDto } from \"../../interface/auth/signin-interface\";\r\n\r\nexport class SigninDto implements ISigninDto{\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    password_confirmation: string;\r\n    id: number;\r\n}","import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Optional, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\nimport { SigninDto } from '../dtos/auth/signin-dto';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class UserSigninService {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    \r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient) {\r\n        this.http = http;\r\n        this.baseUrl = environment.baseUrl;\r\n    }\r\n    \r\n    SigninUser(endPoint:string, input: SigninDto | null | undefined): Observable<any> {\r\n        let url_ = this.baseUrl+endPoint;\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(input);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processLoginUser(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processLoginUser(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<any>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<any>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processLoginUser(response: HttpResponseBase): Observable<any> {debugger\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200 || status === 201) {\r\n            return this.blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        }else if (status === 401) {\r\n            let result401: any = \"Unauthorized\";\r\n            return _observableOf(result401);\r\n        }\r\n         else if (status !== 200 && status !== 204) {\r\n            return this.blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return this.throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<number>(<any>null);\r\n    }\r\n\r\n    throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n        if(result !== null && result !== undefined)\r\n            return _observableThrow(result);\r\n    }\r\n    \r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader(); \r\n                reader.onload = event => { \r\n                    observer.next((<any>event.target).result);\r\n                    observer.complete();\r\n                };\r\n                reader.readAsText(blob); \r\n            }\r\n        });\r\n    }\r\n    \r\n}"],"sourceRoot":""}